platform: template
sensors:

# ####### ######################### #######
# ####### Ranking Sensoren Heatpump #######
# ####### ######################### #######

  solar_ranking_19_hz:
    friendly_name: "Solar Ranking 19 HZ %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_hz_w') == ('unknown' or 'unavailable') 
                      or (states('sensor.average_heatpump_19_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_21_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_23_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_25_hz_w') == ('0.0') )
                      else 
                       (states('sensor.average_heatpump_19_hz_w')|float / 
                      ((states('sensor.average_heatpump_19_hz_w')|float+
                        states('sensor.average_heatpump_21_hz_w')|float+
                        states('sensor.average_heatpump_23_hz_w')|float+
                        states('sensor.average_heatpump_25_hz_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_19_hz

  solar_ranking_21_hz:
    friendly_name: "Solar Ranking 21 HZ %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_hz_w') == ('unknown' or 'unavailable') 
                      or (states('sensor.average_heatpump_19_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_21_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_23_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_25_hz_w') == ('0.0') )
                      else 
                       (states('sensor.average_heatpump_21_hz_w')|float / 
                      ((states('sensor.average_heatpump_19_hz_w')|float+
                        states('sensor.average_heatpump_21_hz_w')|float+
                        states('sensor.average_heatpump_23_hz_w')|float+
                        states('sensor.average_heatpump_25_hz_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_21_hz

  solar_ranking_23_hz:
    friendly_name: "Solar Ranking 23 HZ %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_hz_w') == ('unknown' or 'unavailable') 
                      or (states('sensor.average_heatpump_19_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_21_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_23_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_25_hz_w') == ('0.0') )
                      else 
                       (states('sensor.average_heatpump_23_hz_w')|float / 
                      ((states('sensor.average_heatpump_19_hz_w')|float+
                        states('sensor.average_heatpump_21_hz_w')|float+
                        states('sensor.average_heatpump_23_hz_w')|float+
                        states('sensor.average_heatpump_25_hz_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_23_hz

  solar_ranking_25_hz:
    friendly_name: "Solar Ranking 25 HZ %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_hz_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_hz_w') == ('unknown' or 'unavailable') 
                      or (states('sensor.average_heatpump_19_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_21_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_23_hz_w') == ('0.0') 
                          and states('sensor.average_heatpump_25_hz_w') == ('0.0') )
                      else 
                       (states('sensor.average_heatpump_25_hz_w')|float / 
                      ((states('sensor.average_heatpump_19_hz_w')|float+
                        states('sensor.average_heatpump_21_hz_w')|float+
                        states('sensor.average_heatpump_23_hz_w')|float+
                        states('sensor.average_heatpump_25_hz_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_25_hz

  solar_ranking_19_ww:
    friendly_name: "Solar Ranking 19 WW %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_ww_w') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_heatpump_19_ww_w')|float / 
                      ((states('sensor.average_heatpump_19_ww_w')|float+
                        states('sensor.average_heatpump_21_ww_w')|float+
                        states('sensor.average_heatpump_23_ww_w')|float+
                        states('sensor.average_heatpump_25_ww_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_19_ww

  solar_ranking_21_ww:
    friendly_name: "Solar Ranking 21 WW %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_ww_w') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_heatpump_21_ww_w')|float / 
                      ((states('sensor.average_heatpump_19_ww_w')|float+
                        states('sensor.average_heatpump_21_ww_w')|float+
                        states('sensor.average_heatpump_23_ww_w')|float+
                        states('sensor.average_heatpump_25_ww_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_21_ww

  solar_ranking_23_ww:
    friendly_name: "Solar Ranking 23 WW %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_ww_w') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_heatpump_23_ww_w')|float / 
                      ((states('sensor.average_heatpump_19_ww_w')|float+
                        states('sensor.average_heatpump_21_ww_w')|float+
                        states('sensor.average_heatpump_23_ww_w')|float+
                        states('sensor.average_heatpump_25_ww_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_23_ww

  solar_ranking_25_ww:
    friendly_name: "Solar Ranking 25 WW %"
    value_template: "{{(100 
                      if states('sensor.average_heatpump_19_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_21_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_23_ww_w') == ('unknown' or 'unavailable') 
                      or states('sensor.average_heatpump_25_ww_w') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_heatpump_25_ww_w')|float / 
                      ((states('sensor.average_heatpump_19_ww_w')|float+
                        states('sensor.average_heatpump_21_ww_w')|float+
                        states('sensor.average_heatpump_23_ww_w')|float+
                        states('sensor.average_heatpump_25_ww_w')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_25_ww

  solar_ranking_19:
    friendly_name: "Solar Ranking 19 %"
    value_template: "{{(100 
                      if states('sensor.average_solar_19') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_21') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_23') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_25') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_solar_19')|float / 
                      ((states('sensor.average_solar_19')|float+
                        states('sensor.average_solar_21')|float+
                        states('sensor.average_solar_23')|float+
                        states('sensor.average_solar_25')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_19

  solar_ranking_21:
    friendly_name: "Solar Ranking 21 %"
    value_template: "{{(100 
                      if states('sensor.average_solar_19') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_21') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_23') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_25') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_solar_21')|float / 
                      ((states('sensor.average_solar_19')|float+
                        states('sensor.average_solar_21')|float+
                        states('sensor.average_solar_23')|float+
                        states('sensor.average_solar_25')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_21

  solar_ranking_23:
    friendly_name: "Solar Ranking 23 %"
    value_template: "{{(100 
                      if states('sensor.average_solar_19') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_21') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_23') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_25') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_solar_23')|float / 
                      ((states('sensor.average_solar_19')|float+
                        states('sensor.average_solar_21')|float+
                        states('sensor.average_solar_23')|float+
                        states('sensor.average_solar_25')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_23

  solar_ranking_25:
    friendly_name: "Solar Ranking 25 %"
    value_template: "{{(100 
                      if states('sensor.average_solar_19') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_21') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_23') == ('unknown' or 'unavailable') 
                      or states('sensor.average_solar_25') == ('unknown' or 'unavailable') 
                      else 
                       (states('sensor.average_solar_25')|float / 
                      ((states('sensor.average_solar_19')|float+
                        states('sensor.average_solar_21')|float+
                        states('sensor.average_solar_23')|float+
                        states('sensor.average_solar_25')|float)/4))*100)
                    |round(0)}}"
    device_class: power_factor
    unit_of_measurement: "%"
    attribute_templates:
      last_updated:  "{{ now() }}"
    unique_id: template.sensor_solar_ranking_25
