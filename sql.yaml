# ####### ########################### #######
# ####### Integration SQL Heizung kWh #######
# ####### ########################### #######

# Alle Häuser 1day
- name: SQL Heatpump Power hz kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_hz_kwh_1day
# Alle Häuser 7day
- name: SQL Heatpump Power hz kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_hz_kwh_7day
# Alle Häuser 30day
- name: SQL Heatpump Power hz kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_hz_kwh_30day
# Haus 19 1day
- name: SQL Heatpump Power 19 hz kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_19_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_19_hz_kwh_1day
# Haus 19 7day
- name: SQL Heatpump Power 19 hz kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_19_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_19_hz_kwh_7day
# Haus 19 30day
- name: SQL Heatpump Power 19 hz kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_19_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_19_hz_kwh_30day
# Haus 21 1day
- name: SQL Heatpump Power 21 hz kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_21_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_21_hz_kwh_1day
# Haus 21 7day
- name: SQL Heatpump Power 21 hz kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_21_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_21_hz_kwh_7day
# Haus 21 30day
- name: SQL Heatpump Power 21 hz kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_21_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_21_hz_kwh_30day
# Haus 23 1day
- name: SQL Heatpump Power 23 hz kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_23_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_23_hz_kwh_1day
# Haus 23 7day
- name: SQL Heatpump Power 23 hz kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_23_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_23_hz_kwh_7day
# Haus 23 30day
- name: SQL Heatpump Power 23 hz kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_23_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_23_hz_kwh_30day
# Haus 25 1day
- name: SQL Heatpump Power 25 hz kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_25_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_25_hz_kwh_1day
# Haus 25 7day
- name: SQL Heatpump Power 25 hz kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_25_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_25_hz_kwh_7day
# Haus 25 30day
- name: SQL Heatpump Power 25 hz kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_25_hz_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_25_hz_kwh_30day

# ####### ############################## #######
# ####### Integration SQL Warmwasser kWh #######
# ####### ############################## #######

# Alle Häuser 1day
- name: SQL Heatpump Power ww kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_ww_kwh_1day
# Alle Häuser 7day
- name: SQL Heatpump Power ww kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_ww_kwh_7day
# Alle Häuser 30day
- name: SQL Heatpump Power ww kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_ww_kwh_30day
# Haus 19 1day
- name: SQL Heatpump Power 19 ww kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_19_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_19_ww_kwh_1day
# Haus 19 7day
- name: SQL Heatpump Power 19 ww kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_19_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_19_ww_kwh_7day
# Haus 19 30day
- name: SQL Heatpump Power 19 ww kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_19_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_19_ww_kwh_30day
# Haus 21 1day
- name: SQL Heatpump Power 21 ww kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_21_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_21_ww_kwh_1day
# Haus 21 7day
- name: SQL Heatpump Power 21 ww kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_21_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_21_ww_kwh_7day
# Haus 21 30day
- name: SQL Heatpump Power 21 ww kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_21_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_21_ww_kwh_30day
# Haus 23 1day
- name: SQL Heatpump Power 23 ww kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_23_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_23_ww_kwh_1day
# Haus 23 7day
- name: SQL Heatpump Power 23 ww kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_23_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_23_ww_kwh_7day
# Haus 23 30day
- name: SQL Heatpump Power 23 ww kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_23_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_23_ww_kwh_30day
# Haus 25 1day
- name: SQL Heatpump Power 25 ww kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_25_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_25_ww_kwh_1day
# Haus 25 7day
- name: SQL Heatpump Power 25 ww kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_25_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_25_ww_kwh_7day
# Haus 25 30day
- name: SQL Heatpump Power 25 ww kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.heatpump_25_ww_power_consumption' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_heatpump_power_25_ww_kwh_30day

# ####### ############################ #######
# ####### Integration SQL Solarlog kWh #######
# ####### ############################ #######

# Alle Häuser 1day
- name: SQL Solarlog Power kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solar_power_production' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_kwh_1day
# Alle Häuser 7day
- name: SQL Solarlog Power kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solar_power_production' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_kwh_7day
# Alle Häuser 30day
- name: SQL Solarlog Power kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solar_power_production' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_kwh_30day
# Haus 19 1day
- name: SQL Solarlog Power 19 kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_19_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_19_kwh_1day
# Haus 19 7day
- name: SQL Solarlog Power 19 kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_19_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_19_kwh_7day
# Haus 19 30day
- name: SQL Solarlog Power 19 kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_19_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_19_kwh_30day
# Haus 21 1day
- name: SQL Solarlog Power 21 kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_21_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_21_kwh_1day
# Haus 21 7day
- name: SQL Solarlog Power 21 kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_21_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_21_kwh_7day
# Haus 21 30day
- name: SQL Solarlog Power 21 kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_21_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_21_kwh_30day
# Haus 23 1day
- name: SQL Solarlog Power 23 kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_23_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_23_kwh_1day
# Haus 23 7day
- name: SQL Solarlog Power 23 kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_23_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_23_kwh_7day
# Haus 23 30day
- name: SQL Solarlog Power 23 kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_23_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_23_kwh_30day
# Haus 25 1day
- name: SQL Solarlog Power 25 kWh 1day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_25_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_25_kwh_1day
# Haus 25 7day
- name: SQL Solarlog Power 25 kWh 7day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_25_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*7));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_25_kwh_7day
# Haus 25 30day
- name: SQL Solarlog Power 25 kWh 30day
  query: >
    select cast(round((max(s.state) - min(s.state)),0) as int) as state 
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.solarlog_25_yield_total' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24*30));
  column: 'state'
  unit_of_measurement: "kWh"
  unique_id: template.sensor_sql_solarlog_power_25_kwh_30day

# ####### ################################### #######
# ####### Integration SQL Aussentemperatur °C #######
# ####### ################################### #######

# 24h Mittelwert der Aussentemperatur
- name: SQL Netatmo Outside 24h Average Temperature
  query: >
    select round(avg(s.mean),1) as state
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.netatmo_outdoor_temperature' and s.created_ts > (strftime('%s', 'now') - (1*60*60*24));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_netatmo_outside_24h_average_temperature
# 48h Mittelwert der Aussentemperatur
- name: SQL Netatmo Outside 48h Average Temperature
  query: >
    select round(avg(s.mean),1) as state
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.netatmo_outdoor_temperature' and s.created_ts > (strftime('%s', 'now') - (1*60*60*48));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_netatmo_outside_48h_average_temperature
# 72h Mittelwert der Aussentemperatur
- name: SQL Netatmo Outside 72h Average Temperature
  query: >
    select round(avg(s.mean),1) as state
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.netatmo_outdoor_temperature' and s.created_ts > (strftime('%s', 'now') - (1*60*60*72));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_netatmo_outside_72h_average_temperature
# 96h Mittelwert der Aussentemperatur
- name: SQL Netatmo Outside 96h Average Temperature
  query: >
    select round(avg(s.mean),1) as state
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.netatmo_outdoor_temperature' and s.created_ts > (strftime('%s', 'now') - (1*60*60*96));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_netatmo_outside_96h_average_temperature
# 120h Mittelwert der Aussentemperatur
- name: SQL Netatmo Outside 120h Average Temperature
  query: >
    select round(avg(s.mean),1) as state
    FROM statistics_meta sm
    inner join statistics s on s.metadata_id = sm.id
    where sm.statistic_id = 'sensor.netatmo_outdoor_temperature' and s.created_ts > (strftime('%s', 'now') - (1*60*60*120));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_netatmo_outside_120h_average_temperature

# ####### ################################### #######
# ####### Integration SQL Sondentemperatur °C #######
# ####### ################################### #######

# Haus 19 Erdsonde Minimale Temperaturen in den letzten 72 Stunden (3 Tage)
- name: SQL Erdsonde Haus 19 Temperature
  query: >
    select min(cast(s.state as float)) as state 
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    and not s.state in ('unavailable','unknown')
    where sm.entity_id = 'sensor.luxtronik19_twq_aus_korr' and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*72));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_erdsonde_haus_19_temperature

# Haus 21 Erdsonde Minimale Temperaturen in den letzten 72 Stunden (3 Tage)
- name: SQL Erdsonde Haus 21 Temperature
  query: >
    select min(cast(s.state as float)) as state 
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    and not s.state in ('unavailable','unknown')
    where sm.entity_id = 'sensor.luxtronik21_twq_aus_korr' and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*72));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_erdsonde_haus_21_temperature

# Haus 23 Erdsonde Minimale Temperaturen in den letzten 72 Stunden (3 Tage)
- name: SQL Erdsonde Haus 23 Temperature
  query: >
    select min(cast(s.state as float)) as state 
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    and not s.state in ('unavailable','unknown')
    where sm.entity_id = 'sensor.luxtronik23_twq_aus_korr' and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*72));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_erdsonde_haus_23_temperature

# Haus 25 Erdsonde Minimale Temperaturen in den letzten 72 Stunden (3 Tage)
- name: SQL Erdsonde Haus 25 Temperature
  query: >
    select min(cast(s.state as float)) as state 
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    and not s.state in ('unavailable','unknown')
    where sm.entity_id = 'sensor.luxtronik25_twq_aus_korr' and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*72));
  column: 'state'
  unit_of_measurement: "°C"
  unique_id: template.sensor_sql_erdsonde_haus_25_temperature

# ####### ################################## #######
# ####### Integration SQL Brauchwasser Start #######
# ####### ################################## #######

# Haus 19 Brauchwasser Start in den letzten 168 Stunden (7 Tage)
- name: SQL Brauchwasser Haus 19 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik19_bup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_brauchwasser_haus_19_starts

# Haus 21 Brauchwasser Start in den letzten 168 Stunden (7 Tage)
- name: SQL Brauchwasser Haus 21 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik21_bup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_brauchwasser_haus_21_starts

# Haus 23 Brauchwasser Start in den letzten 168 Stunden (7 Tage)
- name: SQL Brauchwasser Haus 23 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik23_bup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_brauchwasser_haus_23_starts

# Haus 25 Brauchwasser Start in den letzten 168 Stunden (7 Tage)
- name: SQL Brauchwasser Haus 25 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik25_bup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_brauchwasser_haus_25_starts

# ####### ############################# #######
# ####### Integration SQL Heizung Start #######
# ####### ############################# #######

# Haus 19 Heizung Start in den letzten 168 Stunden (7 Tage)
- name: SQL Heizung Haus 19 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik19_hup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_heizung_haus_19_starts

# Haus 21 Heizung Start in den letzten 168 Stunden (7 Tage)
- name: SQL Heizung Haus 21 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik21_hup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_heizung_haus_21_starts

# Haus 23 Heizung Start in den letzten 168 Stunden (7 Tage)
- name: SQL Heizung Haus 23 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik23_hup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_heizung_haus_23_starts

# Haus 25 Heizung Start in den letzten 168 Stunden (7 Tage)
- name: SQL Heizung Haus 25 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id = 'binary_sensor.luxtronik25_hup'
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_heizung_haus_25_starts

# ####### ################################ #######
# ####### Integration SQL Verdichter Start #######
# ####### ################################ #######

# Haus 19 Verdichter Start in den letzten 168 Stunden (7 Tage)
- name: SQL Verdichter Haus 19 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id in ('binary_sensor.luxtronik19_vd1', 'binary_sensor.luxtronik19_vd2')
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_verdichter_haus_19_starts

# Haus 21 Verdichter Start in den letzten 168 Stunden (7 Tage)
- name: SQL Verdichter Haus 21 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id in ('binary_sensor.luxtronik21_vd1', 'binary_sensor.luxtronik21_vd2')
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_verdichter_haus_21_starts

# Haus 23 Verdichter Start in den letzten 168 Stunden (7 Tage)
- name: SQL Verdichter Haus 23 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id in ('binary_sensor.luxtronik23_vd1', 'binary_sensor.luxtronik23_vd2')
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_verdichter_haus_23_starts

# Haus 25 Verdichter Start in den letzten 168 Stunden (7 Tage)
- name: SQL Verdichter Haus 25 Starts
  query: >
    SELECT round(cast(count(*) as float) / 7,1) as state
    FROM states_meta sm
    inner join states s on s.metadata_id = sm.metadata_id
    where sm.entity_id in ('binary_sensor.luxtronik25_vd1', 'binary_sensor.luxtronik25_vd2')
    and s.state = 'on' 
    and not s.old_state_id is null
    and not (select s2.state from states s2 where s2.state_id = s.old_state_id) in ('unavailable','unknown')
    and s.last_updated_ts > (strftime('%s', 'now') - (1*60*60*168));
  column: 'state'
  unique_id: template.sensor_sql_verdichter_haus_25_starts
